import{_ as i,c as a,o as e,a2 as t}from"./chunks/framework.DmvIer41.js";const n="/images/docs/python/ruff/logo.png",l="/images/docs/python/ruff/benchmark.svg",E=JSON.parse('{"title":"Ruff - A better alternative to flake8, black, isort, ...","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"docs/python/ruff.md","filePath":"docs/python/ruff.md"}'),h={name:"docs/python/ruff.md"};function r(p,s,k,o,d,u){return e(),a("div",null,s[0]||(s[0]=[t('<div id="header" align="center"><img src="'+n+'" width="600px"></div><br><br><h1 id="ruff-a-better-alternative-to-flake8-black-isort" tabindex="-1">Ruff - A better alternative to flake8, black, isort, ... <a class="header-anchor" href="#ruff-a-better-alternative-to-flake8-black-isort" aria-label="Permalink to &quot;Ruff - A better alternative to flake8, black, isort, ...&quot;">​</a></h1><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>Ruff est un linter et formateur Python ultra-performant, développé par <a href="https://astral.sh/" target="_blank" rel="noreferrer">astral.sh</a> qui sont également à l&#39;origine de <a href="https://docs.astral.sh/uv/" target="_blank" rel="noreferrer">uv</a>, un gestionnaire de paquets Python moderne. Ruff est écrit en Rust ce qui lui permet d&#39;être plus performant que ses concurrents, tout en étant un All-in-one afin de remplacer les outils traditionnels dans un workflow Python tels que <a href="https://flake8.pycqa.org/en/latest/" target="_blank" rel="noreferrer">flake8</a>, <a href="https://isort.readthedocs.io/en/stable/" target="_blank" rel="noreferrer">isort</a>, <a href="https://black.readthedocs.io/en/stable/" target="_blank" rel="noreferrer">black</a> ...</p><p>Astral nous fournit un benchmark comparatif afin de montrer les performances de Ruff par rapport à ses concurrents :</p><div class="center"><img src="'+l+`" alt="Ruff Benchmark"></div><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>Pour installer Ruff, différentes solutions sont possibles :</p><ol><li>Avec <code>pip</code> :</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruff</span></span></code></pre></div><ol start="2"><li>Avec <code>pipx</code> :</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pipx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruff</span></span></code></pre></div><ol start="3"><li>Si vous utilisez un gestionnaire de paquets Python comme <code>uv</code> ou <code>poetry</code> :</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># uv</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruff</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># poetry</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">poetry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruffWith</span></span></code></pre></div><hr><p>Il existe des méthodes d&#39;installation alternatives dépendant de votre système d&#39;exploitation. Plus d&#39;informations directement dans la documentation officielle : <a href="https://docs.astral.sh/ruff/installation/" target="_blank" rel="noreferrer">docs.astral.sh/ruff/installation/</a></p><hr><h2 id="utilisation" tabindex="-1">Utilisation <a class="header-anchor" href="#utilisation" aria-label="Permalink to &quot;Utilisation&quot;">​</a></h2><p>Ruff se comporte comme un CLI (Command Line Interface), il est donc possible d&#39;utiliser les commandes suivantes :</p><ul><li><code>ruff check .</code> : Lint tous les fichiers dans le répertoire courant.</li><li><code>ruff format .</code> : Formate tous les fichiers dans le répertoire courant.</li><li><code>ruff check . --select I --fix</code> : Formate tous les fichiers mais uniquements les imports (équivalent à <code>isort</code>).</li></ul><hr><h2 id="integrations" tabindex="-1">Intégrations <a class="header-anchor" href="#integrations" aria-label="Permalink to &quot;Intégrations&quot;">​</a></h2><p>Si vous aviez pour habitude d&#39;utiliser <code>flake8</code>, <code>black</code> ou encore <code>isort</code> directement au sein de votre IDE préféré. Sachez que vous ne serai pas perdu à faire le switch vers <code>ruff</code> car lui aussi propose de nombreuses intégrations.</p><h3 id="vscode" tabindex="-1">VSCode <a class="header-anchor" href="#vscode" aria-label="Permalink to &quot;VSCode&quot;">​</a></h3><p>Pour VSCode ou tout autre &quot;VSCode Based&quot; (Cursor, ...), il existe un plugin officiel directement sur le marketplace : <a href="https://marketplace.visualstudio.com/items?itemName=charliermarsh.ruff" target="_blank" rel="noreferrer">Ruff</a>.</p><ol><li><p>Ouvrez le menu <code>Extensions</code> et recherchez <code>Ruff</code>.</p></li><li><p>Cliquez sur <code>Installer</code>.</p></li><li><p>Configurez les paramètres dans le fichier <code>settings.json</code> de VSCode. Les plus importants sont :</p></li></ol><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ruff.enable&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ruff.configurationPreference&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;filesystemFirst&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// editorFirst, filesystemFirst, editorOnly</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ruff.fixAll&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Corrige les problèmes</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ruff.lint.enable&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Sinon Ruff fonctionne uniquement en formatter</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ruff.lint.run&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;onType&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Quand on lint ? onType, onSave</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ruff.lint.ignore&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;E203&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Ignorer certaines erreurs</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ruff.run&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;onType&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Quand on format ? onType, onSave</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ruff.lineLength&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Si on veut pas utiliser la ligne de 80 caractères</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ruff.organizeImports&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Si on veut pas utiliser isort</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ruff.exclude&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Exclure des fichiers</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="gestionnaire-de-paquets-uv-poetry" tabindex="-1">Gestionnaire de paquets (uv, poetry, ...) <a class="header-anchor" href="#gestionnaire-de-paquets-uv-poetry" aria-label="Permalink to &quot;Gestionnaire de paquets (uv, poetry, ...)&quot;">​</a></h3><p>Ruff propose également une intégrations avec les gestionnaires de paquets Python tels que <code>uv</code>, <code>poetry</code> ... au travers du fichier <code>pyproject.toml</code>.</p><ol><li><p>On installer Ruff en mode développement : <code>poetry add --dev ruff</code> ou <code>uv add --dev ruff</code></p></li><li><p>On configure Ruff dans le fichier <code>pyproject.toml</code> :</p></li></ol><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">line-length = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lint.ignore = [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;E203&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Whitespace before &#39;:&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;E712&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">order-by-type = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">relative-imports-order = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;closest-to-furthest&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">extra-standard-library = [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;typing&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">section-order = [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;future&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;standard-library&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;third-party&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;first-party&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;local-folder&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">known-first-party = []</span></span></code></pre></div><h3 id="pre-commit" tabindex="-1">Pre-commit <a class="header-anchor" href="#pre-commit" aria-label="Permalink to &quot;Pre-commit&quot;">​</a></h3><p>Ruff s&#39;intègre également très facilement avec <code>pre-commit</code>. Pour ce faire, il suffit d&#39;ajouter la configuration suivante à notre fichier <code>.pre-commit-config.yaml</code> :</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">repo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">https://github.com/astral-sh/ruff-pre-commit</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  rev</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">v0.11.6</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  hooks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ruff</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">--fix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ruff-format</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">--diff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">--target-version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">py312</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>Puis, il suffit de lancer <code>pre-commit install</code> pour activer le hook.</p><p>Une fois le hook installé, on peut lancer <code>pre-commit run --all-files</code> pour lancer le hook sur tous les fichiers afin de vérifier que tout est bon.</p><hr>`,39)]))}const g=i(h,[["render",r]]);export{E as __pageData,g as default};
